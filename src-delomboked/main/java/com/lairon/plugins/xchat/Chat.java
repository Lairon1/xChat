// Generated by delombok at Mon Mar 13 21:37:03 MSK 2023
package com.lairon.plugins.xchat;

import lombok.NonNull;

public class Chat {
    @NonNull
    private final String id;
    @NonNull
    private String format;
    private int range;
    private char symbol;

    @java.lang.SuppressWarnings("all")
    private static char $default$symbol() {
        return ' ';
    }

    @java.lang.SuppressWarnings("all")
    Chat(@NonNull final String id, @NonNull final String format, final int range, final char symbol) {
        if (id == null) {
            throw new java.lang.NullPointerException("id is marked non-null but is null");
        }
        if (format == null) {
            throw new java.lang.NullPointerException("format is marked non-null but is null");
        }
        this.id = id;
        this.format = format;
        this.range = range;
        this.symbol = symbol;
    }


    @java.lang.SuppressWarnings("all")
    public static class ChatBuilder {
        @java.lang.SuppressWarnings("all")
        private String id;
        @java.lang.SuppressWarnings("all")
        private String format;
        @java.lang.SuppressWarnings("all")
        private int range;
        @java.lang.SuppressWarnings("all")
        private boolean symbol$set;
        @java.lang.SuppressWarnings("all")
        private char symbol$value;

        @java.lang.SuppressWarnings("all")
        ChatBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public Chat.ChatBuilder id(@NonNull final String id) {
            if (id == null) {
                throw new java.lang.NullPointerException("id is marked non-null but is null");
            }
            this.id = id;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public Chat.ChatBuilder format(@NonNull final String format) {
            if (format == null) {
                throw new java.lang.NullPointerException("format is marked non-null but is null");
            }
            this.format = format;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public Chat.ChatBuilder range(final int range) {
            this.range = range;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public Chat.ChatBuilder symbol(final char symbol) {
            this.symbol$value = symbol;
            symbol$set = true;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Chat build() {
            char symbol$value = this.symbol$value;
            if (!this.symbol$set) symbol$value = Chat.$default$symbol();
            return new Chat(this.id, this.format, this.range, symbol$value);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "Chat.ChatBuilder(id=" + this.id + ", format=" + this.format + ", range=" + this.range + ", symbol$value=" + this.symbol$value + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static Chat.ChatBuilder builder() {
        return new Chat.ChatBuilder();
    }

    @NonNull
    @java.lang.SuppressWarnings("all")
    public String getId() {
        return this.id;
    }

    @NonNull
    @java.lang.SuppressWarnings("all")
    public String getFormat() {
        return this.format;
    }

    @java.lang.SuppressWarnings("all")
    public int getRange() {
        return this.range;
    }

    @java.lang.SuppressWarnings("all")
    public char getSymbol() {
        return this.symbol;
    }

    @java.lang.SuppressWarnings("all")
    public void setFormat(@NonNull final String format) {
        if (format == null) {
            throw new java.lang.NullPointerException("format is marked non-null but is null");
        }
        this.format = format;
    }

    @java.lang.SuppressWarnings("all")
    public void setRange(final int range) {
        this.range = range;
    }

    @java.lang.SuppressWarnings("all")
    public void setSymbol(final char symbol) {
        this.symbol = symbol;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Chat)) return false;
        final Chat other = (Chat) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.getRange() != other.getRange()) return false;
        if (this.getSymbol() != other.getSymbol()) return false;
        final java.lang.Object this$id = this.getId();
        final java.lang.Object other$id = other.getId();
        if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
        final java.lang.Object this$format = this.getFormat();
        final java.lang.Object other$format = other.getFormat();
        if (this$format == null ? other$format != null : !this$format.equals(other$format)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Chat;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getRange();
        result = result * PRIME + this.getSymbol();
        final java.lang.Object $id = this.getId();
        result = result * PRIME + ($id == null ? 43 : $id.hashCode());
        final java.lang.Object $format = this.getFormat();
        result = result * PRIME + ($format == null ? 43 : $format.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "Chat(id=" + this.getId() + ", format=" + this.getFormat() + ", range=" + this.getRange() + ", symbol=" + this.getSymbol() + ")";
    }
}
